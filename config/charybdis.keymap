#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
    };
};

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "BASE";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R      &kp T    &kp Y  &kp U    &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp LCTRL  &kp A  &kp S  &kp D         &kp F      &kp G    &kp H  &kp J    &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V      &kp B    &kp N  &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSPACE
                         &kp LEFT_ALT  &kp SPACE  &mo 1    &mo 2  &kp RET
            >;
        };

        Lower {
            label = "LEFT";
            bindings = <
&kp LA(LEFT_SHIFT)  &trans  &mkp RCLK  &kp UP_ARROW    &mkp LCLK  &msc SCRL_UP      &kp N7     &kp N8  &kp N9  &kp N0   &kp HOME  &trans
&kp LS(DEL)         &trans  &kp LEFT   &kp DOWN_ARROW  &kp RIGHT  &msc SCRL_DOWN    &kp N4     &kp N5  &kp N6  &none    &kp END   &trans
&kp ESCAPE          &trans  &kp ENTER  &kp EQUAL       &kp MINUS  &kp PLUS          &kp N1     &kp N2  &kp N3  &kp DOT  &trans    &trans
                                       &kp LGUI        &kp SPACE  &trans            &kp RCTRL  &trans
            >;
        };

        Raise {
            label = "RIGHT";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4    &kp F5     &kp F6          &kp LC(TAB)    &kp LS(LC(TAB))   &kp LS(DEL)        &kp HOME              &kp PAGE_UP    &kp DEL
&kp F7  &kp F8  &kp F9  &kp F10   &kp F11    &kp F12         &kp LG(LS(S))  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp END               &kp PAGE_DOWN  &kp GRAVE
&trans  &trans  &trans  &trans    &trans     &trans          &kp LG(L)      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp NON_US_BACKSLASH  &kp PIPE       &trans
                        &kp LGUI  &kp SPACE  &kp LEFT_ALT    &trans         &bootloader
            >;
        };
    };
};
